'''
5시 2분 시작

정수 k개를 더해서 그 합이 n이 되는 경우의 수를 구하는 프로그램
1+2와 2+1은 서로 다른 경우이고 한개의 수를 여러번 사용 가능

dp배열을 생성해서 n(1~k)까지 dp를 채워가는데 1~n-1까지의 숫자들 2개로 만들 수 있는 모든 경우의 수를 더해서 넣기.

정수 1개를 더해서 0을 만드는 경우 -> 0(1)
정수 1개를 더해서 1을 만드는 경우 -> 1(1)
정수 1개를 더해서 2를 만드는 경우 -> 2(1)
정수 1개를 더해서 3을 만드는 경우 -> 3(1)
...
정수 2개를 더해서 0을 만드는 경우 -> 0+0 (1)
정수 2개를 더해서 1을 만드는 경우 -> 0+1,1+0(2)
정수 2개를 더해서 2를 만드는 경우 -> 1+1, 2+0, 0+2(3)
////
(  1 2 3) -> n
(1)1 1 1
(2)2 3 4?체크

/////
정수 2개를 더해서 3을 만드는 경우 -> 1+2, 2+1, 3+0,0+3(4)

////점화식 -> 위+왼쪽(dp[i][j] = dp[i][j-1] + dp[i-1][j])


'''

n, k = map(int, input().split())

dp = [[1]*(n) for _ in range(k)]

for i in range(1,k):
    for j in range(n):
        if j==0:
            dp[i][j] = i+1
        else:
            dp[i][j] = (dp[i-1][j] + dp[i][j-1])%1000000000

# print(dp)
print(dp[k-1][n-1])




