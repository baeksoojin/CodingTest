'''
n!를 구하고 해당 값에서 뒤에서부터 돌면서 0이 나오지 않을때까지 counting된 값을 출력
'''

# n = int(input())

# def factorial(n):
#     if n==1:
#         return 1
#     else:
#         return factorial(n-1)*n

# num = str(factorial(n))

# for i in range(len(num)-1,-1,-1):
#     if num[i]!="0":
#         print(len(num)-i-1)
#         break

# 해당방법은 메모리 초과가 났다. -> 100%대에서 메모리초과
# 엄청나게 큰 수를 다루기 때문일 것인데 그렇다면 팩토리얼로 값을 찾아서 처리하는 것이 아닌 다른 방법을 사용해야한다.

'''
0이 나오기 위해서는 5!를 생각해보면 그 사이에 2와 5가 있어서 10이 곱해진다. 따라서 뒷자리에 0이 하나 있게된다. -> 총 1개
10!을 생각해보면 5!까지 1번의 0을 만들고 10에서 또 0이 뒷자리에 하나 더 생긴다. -> 총 2개
15!를 생각해보면 5!까지 1번 이후부터 10!까지의 곱해지는 수로인해 두번째 0, 그리고 11~15까지의 수가 곱해지면 12*15로 인해 0이 뒷자리에 한번 더 생긴다. -> 3개

5단위로 0의 개수가 증가하고 있는 것을 알 수 있다.
따라서 주어지는 숫자 n을 5로 나눈 몫이 그 결과가 된다.

25!을 생각해보면 몫은 5이지만 위의 코드로 확인해보니 6번이 나온다. 25가 곱해질때 (20이후의 숫자만 생각해보면) 22*5 그리고 24*5 이렇게 5가 25로인해서 2개 존재해서 1번 더 발생하는 것이다.
-> 나눈 몫이 5보다 작아질 때까지 5로 나누는 과정을 반복하며 count값을 증가시켜줘야한다.

'''

n= int(input())

count = 0

while n>=5:
    count += n//5
    n = n//5
print(count)